{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contactsActions.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","components/Container/Container.jsx","App.js","components/Notification/Notification.js","redux/contacts/contactsReducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContacts","createAction","name","number","payload","contact","id","uuidv4","removeContacts","changeFilter","connect","state","contacts","items","filter","toLowerCase","includes","dispatch","onRemove","contactsActions","className","styles","TaskList","map","TaskList_item","buttonstyle","TaskList_button","type","onClick","mapDispatchToProps","onChangeFilter","value","filterstyle","inputstyle","onChange","e","target","ContactForm","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","pattern","TaskEditor_button","Component","Container","children","container","App","defaultModules","set","PNotifyMobile","createReducer","action","item","trim","error","text","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf973b01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"Filter_filterstyle__m3qV-\",\"inputstyle\":\"Filter_inputstyle__fLYBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nxVi\"};","import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst addContacts = createAction(\"contacts/addContact\", (name, number) => ({\n  payload: {\n    contact: {\n      id: uuidv4(),\n      name,\n      number,\n    },\n  },\n}));\n\nconst removeContacts = createAction(\"contacts/removeContact\");\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default { addContacts, removeContacts, changeFilter };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst ContactList = ({ contacts, onRemove }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \": \" + contact.number}\n        {\n          <span className={styles.buttonstyle}>\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemove(contact.id)}\n            ></button>\n          </span>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemove: (id) => dispatch(contactsActions.removeContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={styles.filterstyle}>\n      Find contacts by name\n      <input\n        className={styles.inputstyle}\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsActions.addContacts,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","// import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [\n//       // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//       // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//       // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//       // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//     ],\n//     filter: \"\",\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(contacts);\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   gatheredData = (data) => {\n//     const newData = data;\n//     return newData;\n//   };\n\n//   addContact = (task) => {\n//     const searchSameName = this.state.contacts\n//       .map((cont) => cont.name.toLowerCase())\n//       .includes(task.name);\n\n//     if (searchSameName) {\n//       alert(`${task.name} is already in contacts`);\n//     } else if (task.name.length === 0) {\n//       alert(\"Fields must be filled!\");\n//     } else {\n//       const contact = {\n//         ...task,\n//         id: uuidv4(),\n//       };\n\n//       this.setState((prevState) => ({\n//         contacts: [...prevState.contacts, contact],\n//       }));\n//     }\n//   };\n\n//   deleteContact = (nameId) => {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter((name) => name.id !== nameId),\n//     }));\n//   };\n\n//   changeFilter = (filter) => {\n//     this.setState({ filter });\n//   };\n\n//   getFilteredNames = () => {\n//     const { filter, contacts } = this.state;\n//     // const normalizeFilter = filter.toLowerCase();\n\n//     return contacts.filter((contacts) =>\n//       contacts.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n//   removeContact = (contactId) => {\n//     this.setState((prevState) => {\n//       return {\n//         contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n//       };\n//     });\n//   };\n\n//   render() {\n//     const { filter } = this.state;\n//     const filteredNames = this.getFilteredNames();\n\n//     return (\n//       <Container>\n//         <h1>Phonebook</h1>\n\n//         <ContactForm onAddContact={this.addContact} />\n//         <h1>Contacts</h1>\n\n//         <Filter value={filter} onChangeFilter={this.changeFilter} />\n\n//         <ContactList\n//           contacts={filteredNames}\n//           onRemoveContact={this.removeContact}\n//         />\n//       </Container>\n//     );\n//   }\n// }\n\nexport default function App() {\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm />\n\n        <Filter />\n\n        <ContactList />\n      </div>\n    </Container>\n  );\n}\n","import { error, defaultModules } from \"@pnotify/core/dist/PNotify.js\";\nimport * as PNotifyMobile from \"@pnotify/mobile/dist/PNotifyMobile.js\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\ndefaultModules.set(PNotifyMobile, {});\n\nexport default function errorMessage(name) {\n  error({\n    text: `${name} is already in contacts!`,\n  });\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\nimport errorMessage from \"../../components/Notification/Notification\";\n\nconst INITIAL_DATA = [\n  // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\nconst addContacts = (state, action) => {\n  const names = state.map((item) => item.name.toLowerCase());\n  const isNotUniqueContact = names.includes(\n    action.payload.contact.name.toLowerCase().trim()\n  );\n\n  if (isNotUniqueContact) {\n    errorMessage(action.payload.contact.name);\n    return state;\n  } else {\n    return [...state, action.payload.contact];\n  }\n};\n\nconst removeContacts = (state, action) => {\n  return state.filter(({ id }) => id !== action.payload);\n};\n\nconst items = createReducer(INITIAL_DATA, {\n  [contactsActions.addContacts]: addContacts,\n  [contactsActions.removeContacts]: removeContacts,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducers\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store.store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1Xh9I\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__zV_-B\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__1y811\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__2qrre\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__28K68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__xyjBb\",\"TaskList_item\":\"ContactList_TaskList_item__1tsYN\",\"completed\":\"ContactList_completed__3ovXY\",\"TaskList_text\":\"ContactList_TaskList_text__3bmaX\",\"TaskList_actions\":\"ContactList_TaskList_actions__omA3Y\",\"TaskList_button\":\"ContactList_TaskList_button__1lVzC\",\"buttonstyle\":\"ContactList_buttonstyle__Sid76\"};"],"sourceRoot":""}