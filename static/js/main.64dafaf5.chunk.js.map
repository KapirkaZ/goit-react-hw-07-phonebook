{"version":3,"sources":["components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contactsActions.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.jsx","components/Container/Container.jsx","redux/contacts/contactsSelectors.js","App.js","components/Notification/Notification.js","redux/contacts/contactsReducers.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","connect","state","contacts","items","filter","contact","name","toLowerCase","includes","dispatch","onRemove","id","contactsActions","removeContacts","className","styles","TaskList","map","TaskList_item","number","buttonstyle","TaskList_button","type","onClick","mapDispatchToProps","onChangeFilter","value","filterstyle","inputstyle","onChange","e","target","axios","defaults","baseURL","addContact","post","then","data","catch","error","fetchContacts","get","removeContact","delete","ContactForm","handleChange","setState","handleSubmit","preventDefault","props","onAddContact","TaskEditor","onSubmit","this","TaskEditor_label","TaskEditor_input","pattern","TaskEditor_button","Component","contactsOperations","Container","children","container","getFilter","createSelector","normalizedFilter","loading","isLoading","contactsSelectors","isError","useEffect","defaultModules","set","PNotifyMobile","fetchContactRequest","actions","fetchContactSuccess","fetchContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","createReducer","_","payload","action","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contactsReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64dafaf5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterstyle\":\"Filter_filterstyle__m3qV-\",\"inputstyle\":\"Filter_inputstyle__fLYBN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2nxVi\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactRequest = createAction(\"contacts/addRequest\");\nconst addContactSuccess = createAction(\"contacts/addSuccess\");\nconst addContactError = createAction(\"contacts/addError\");\n\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/removeError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n  changeFilter,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst ContactList = ({ contacts, onRemove }) => (\n  <ul className={styles.TaskList}>\n    {contacts.map((contact) => (\n      <li className={styles.TaskList_item} key={contact.id}>\n        {contact.name + \": \" + contact.number}\n        {\n          <span className={styles.buttonstyle}>\n            <button\n              className={styles.TaskList_button}\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemove(contact.id)}\n            ></button>\n          </span>\n        }\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onRemove: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nconst mapStateToProps = (state) => {\n  const { items, filter } = state.contacts;\n  const visibleContacts = items.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return {\n    contacts: visibleContacts,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onRemove: (id) => dispatch(contactsActions.removeContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div className={styles.filterstyle}>\n      Find contacts by name\n      <input\n        className={styles.inputstyle}\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onchangeFilter: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  value: state.contacts.filter,\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import axios from \"axios\";\r\n\r\nimport contactsActions from \"./contactsActions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  dispatch(contactsActions.addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", { name, number })\r\n    .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    .catch((error) => dispatch(contactsActions.addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(contactsActions.fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(contactsActions.removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\r\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\r\n};\r\n\r\nexport default {\r\n  addContact,\r\n  fetchContacts,\r\n  removeContact,\r\n};\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    this.props.onAddContact(name, number);\n\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    return (\n      <form className={styles.TaskEditor} onSubmit={this.handleSubmit}>\n        <label className={styles.TaskEditor_label}>\n          Name:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n        </label>\n        <label className={styles.TaskEditor_label}>\n          Number:\n          <input\n            className={styles.TaskEditor_input}\n            type=\"text\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n          />\n        </label>\n        <button className={styles.TaskEditor_button} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import PropTypes from \"prop-types\";\nimport styles from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={styles.container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getError = (state) => state.contacts.error;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  getLoading,\r\n  getError,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n","// import React, { Component } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Container from \"./components/Container/Container\";\nimport contactsOperations from \"./redux/contacts/contactsOperations\";\nimport contactsSelectors from \"./redux/contacts/contactsSelectors\";\nimport { connect } from \"react-redux\";\nimport { useEffect } from \"react\";\n\nconst App = ({ fetchContacts }) => {\n  // eslint-disable-next-line\n  useEffect(() => fetchContacts(), []);\n\n  return (\n    <Container>\n      <div>\n        <h1>Phonebook</h1>\n\n        <ContactForm />\n\n        <Filter />\n\n        <ContactList />\n      </div>\n    </Container>\n  );\n};\nconst mapStateToProps = (state) => ({\n  isLoading: contactsSelectors.getLoading(state),\n  isError: contactsSelectors.getError(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { error, defaultModules } from \"@pnotify/core/dist/PNotify.js\";\nimport * as PNotifyMobile from \"@pnotify/mobile/dist/PNotifyMobile.js\";\nimport \"@pnotify/core/dist/PNotify.css\";\nimport \"@pnotify/core/dist/BrightTheme.css\";\n\ndefaultModules.set(PNotifyMobile, {});\n\nexport default function errorMessage(name) {\n  error({\n    text: `${name} is already in contacts!`,\n  });\n}\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contactsActions\";\n\nimport errorMessage from \"../../components/Notification/Notification\";\n\nconst {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} = actions;\n\n// const addContacts = (state, action) => {\n//   const names = state.map((item) => item.name.toLowerCase());\n//   const isNotUniqueContact = names.includes(\n//     action.payload.contact.name.toLowerCase().trim()\n//   );\n\n//   if (isNotUniqueContact) {\n//     errorMessage(action.payload.contact.name);\n//     return state;\n//   } else {\n//     return [...state, action.payload.contact];\n//   }\n// };\n\n// const removeContacts = (state, action) => {\n//   return state.filter(({ id }) => id !== action.payload);\n// };\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (_, action) => action.payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n});\n\nconst error = createReducer(false, {\n  [addContactRequest]: () => false,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => true,\n  [deleteContactRequest]: () => false,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => true,\n  [fetchContactRequest]: () => false,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => true,\n});\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducers\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const contactsPersistConfig = {\n//   key: \"root\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\nconst store = configureStore({\n  reducer: {\n    // contacts: persistReducer(contactsPersistConfig, contactsReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./styles.css\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactForm_TaskEditor__1Xh9I\",\"TaskEditor_label\":\"ContactForm_TaskEditor_label__zV_-B\",\"TaskEditor_input\":\"ContactForm_TaskEditor_input__1y811\",\"TaskEditorinput\":\"ContactForm_TaskEditorinput__2qrre\",\"TaskEditor_button\":\"ContactForm_TaskEditor_button__28K68\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__xyjBb\",\"TaskList_item\":\"ContactList_TaskList_item__1tsYN\",\"completed\":\"ContactList_completed__3ovXY\",\"TaskList_text\":\"ContactList_TaskList_text__3bmaX\",\"TaskList_actions\":\"ContactList_TaskList_actions__omA3Y\",\"TaskList_button\":\"ContactList_TaskList_button__1lVzC\",\"buttonstyle\":\"ContactList_buttonstyle__Sid76\"};"],"sourceRoot":""}